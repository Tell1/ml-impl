<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <algorithm id="de" class="ec.EC">
            <iterationStrategy class="ec.iterationstrategies.DifferentialEvolutionIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="50"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
    </algorithms>
    <problems>
        <problem id="spherical" class="problem.FunctionOptimisationProblem" domain="R(-5.12:5.12)^30">
            <function class="functions.continuous.unconstrained.Spherical"/>
        </problem>
        <problem id="rosenbrock" class="problem.FunctionOptimisationProblem" domain="R(-2.048:2.048)^30">
            <function class="functions.continuous.unconstrained.Rosenbrock"/>
        </problem>
        <problem id="griewank" class="problem.FunctionOptimisationProblem" domain="R(-600:600)^30">
            <function class="functions.continuous.unconstrained.Griewank"/>
        </problem>
        <problem id="hyperellipsoid" class="problem.FunctionOptimisationProblem" domain="R(-5.12:5.12)^30">
            <function class="functions.continuous.unconstrained.HyperEllipsoid"/>
        </problem>
        <problem id="colville" class="problem.FunctionOptimisationProblem" domain="R(-10:10)^4">
            <function class="functions.continuous.unconstrained.Colville"/>
        </problem>
        <problem id="ackley" class="problem.FunctionOptimisationProblem" domain="R(-32.768:32.768)^30">
            <function class="functions.continuous.unconstrained.Ackley"/>
        </problem>
    </problems>
    <measurements id="measurements" class="simulator.MeasurementSuite" resolution="10">
        <addMeasurement class="measurement.single.Fitness"/>
        <!--        <addMeasurement class="measurement.single.Solution" />-->
    </measurements>
    <simulations>
        <simulation samples="1">
            <algorithm idref="de"/>
            <problem idref="spherical"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/de-spherical.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="de"/>
            <problem idref="rosenbrock"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/de-rosenbrock.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="de"/>
            <problem idref="griewank"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/de-griewank.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="de"/>
            <problem idref="hyperellipsoid"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/de-hyperellipsoid.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="de"/>
            <problem idref="colville"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/de-colville.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="de"/>
            <problem idref="ackley"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/de-ackley.txt"/>
        </simulation>
    </simulations>
</simulator>
