<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <algorithm id="pso" class="pso.PSO">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>
    </algorithms>

    <problems>
        <!-- Shifted Elliptic -->
        <problem id="f1" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Elliptic" />
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Shifted Rastrigin -->
        <problem id="f2" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rastrigin" />
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Shifted Ackley -->
        <problem id="f3" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Ackley" />
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Single-group Shifted and m-rotated Elliptic -->
        <problem id="f4" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.ScaledFunctionDecorator">
                            <verticalScale class="controlparameter.ConstantControlParameter" parameter="1E6" />
                            <function class="functions.continuous.decorators.RangeFunctionDecorator">
                                <start class="controlparameter.ConstantControlParameter" parameter="0" />
                                <end class="controlparameter.ConstantControlParameter" parameter="50" />
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Elliptic" />
                                </function>
                            </function>
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="50" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Elliptic" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Single-group Shifted and m-rotated Rastrigin -->
        <problem id="f5" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.ScaledFunctionDecorator">
                            <verticalScale class="controlparameter.ConstantControlParameter" parameter="1E6" />
                            <function class="functions.continuous.decorators.RangeFunctionDecorator">
                                <start class="controlparameter.ConstantControlParameter" parameter="0" />
                                <end class="controlparameter.ConstantControlParameter" parameter="50" />
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Rastrigin" />
                                </function>
                            </function>
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="50" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Rastrigin" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Single-group Shifted and m-rotated Ackley -->
        <problem id="f6" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.ScaledFunctionDecorator">
                            <verticalScale class="controlparameter.ConstantControlParameter" parameter="1E6" />
                            <function class="functions.continuous.decorators.RangeFunctionDecorator">
                                <start class="controlparameter.ConstantControlParameter" parameter="0" />
                                <end class="controlparameter.ConstantControlParameter" parameter="50" />
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Ackley" />
                                </function>
                            </function>
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="50" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Ackley" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Single-group Shifted m-dimensional SchwefelProblem1_2 -->
        <problem id="f7" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.ScaledFunctionDecorator">
                            <verticalScale class="controlparameter.ConstantControlParameter" parameter="1E6" />
                            <function class="functions.continuous.decorators.RangeFunctionDecorator">
                                <start class="controlparameter.ConstantControlParameter" parameter="0" />
                                <end class="controlparameter.ConstantControlParameter" parameter="50" />
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.SchwefelProblem1_2" />
                                </function>
                            </function>
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="50" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Spherical" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Single-group Shifted m-dimensional Rosenbrock -->
        <problem id="f8" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.ScaledFunctionDecorator">
                            <verticalScale class="controlparameter.ConstantControlParameter" parameter="1E6" />
                            <function class="functions.continuous.decorators.RangeFunctionDecorator">
                                <start class="controlparameter.ConstantControlParameter" parameter="0" />
                                <end class="controlparameter.ConstantControlParameter" parameter="50" />
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Rosenbrock" />
                                </function>
                            </function>
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="50" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Spherical" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/2m-group Shifted and m-rotated Elliptic -->
        <problem id="f9" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                            <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                            <upper class="controlparameter.ConstantControlParameter" parameter="10" />
                            <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                <function class="functions.continuous.unconstrained.Elliptic" />
                            </function>
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="500" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Elliptic" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/2m-group Shifted and m-rotated Rastrigin   -->
        <problem id="f10" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                            <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                            <upper class="controlparameter.ConstantControlParameter" parameter="10" />
                            <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                <function class="functions.continuous.unconstrained.Rastrigin" />
                            </function>
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="500" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Rastrigin" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/2m-group Shifted and m-rotated Ackley -->
        <problem id="f11" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                            <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                            <upper class="controlparameter.ConstantControlParameter" parameter="10" />
                            <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                <function class="functions.continuous.unconstrained.Ackley" />
                            </function>
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="500" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Ackley" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/2m-group Shifted m-dimensional SchwefelProblem1_2 -->
        <problem id="f12" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                            <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                            <upper class="controlparameter.ConstantControlParameter" parameter="10" />
                            <function class="functions.continuous.SchwefelProblem1_2" />
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="500" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Spherical" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/2m-group Shifted m-dimensional Rosenbrock -->
        <problem id="f13" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.hybrid.SimpleHybridFunction">
                        <addFunction class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                            <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                            <upper class="controlparameter.ConstantControlParameter" parameter="10" />
                            <function class="functions.continuous.unconstrained.Rosenbrock" />
                        </addFunction>
                        <addFunction class="functions.continuous.decorators.RangeFunctionDecorator">
                            <start class="controlparameter.ConstantControlParameter" parameter="500" />
                            <end class="controlparameter.ConstantControlParameter" parameter="1000" />
                            <function class="functions.continuous.unconstrained.Spherical" />
                        </addFunction>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/m-group Shifted m-rotated Elliptic  -->
        <problem id="f14" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                        <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                        <upper class="controlparameter.ConstantControlParameter" parameter="20" />
                        <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                            <function class="functions.continuous.unconstrained.Elliptic" />
                        </function>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/m-group Shifted m-rotated Rastrigin  -->
        <problem id="f15" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                        <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                        <upper class="controlparameter.ConstantControlParameter" parameter="20" />
                        <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                            <function class="functions.continuous.unconstrained.Rastrigin" />
                        </function>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/m-group Shifted m-rotated Ackley -->
        <problem id="f16" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                        <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                        <upper class="controlparameter.ConstantControlParameter" parameter="20" />
                        <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                            <function class="functions.continuous.unconstrained.Ackley" />
                        </function>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/m-group Shifted m-dimensional SchwefelProblem1_2 -->
        <problem id="f17" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                        <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                        <upper class="controlparameter.ConstantControlParameter" parameter="20" />
                        <function class="functions.continuous.SchwefelProblem1_2" />
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- D/m-group Shifted m-dimensional Rosenbrock -->
        <problem id="f18" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.PermutationFunctionDecorator">
                    <function class="functions.continuous.decorators.SummationRangeFunctionDecorator" groupSize="50">
                        <lower class="controlparameter.ConstantControlParameter" parameter="0" />
                        <upper class="controlparameter.ConstantControlParameter" parameter="20" />
                        <function class="functions.continuous.unconstrained.Rosenbrock" />
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Shifted SchwefelProblem1_2 -->
        <problem id="f19" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.SchwefelProblem1_2" />
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>

        <!-- Shifted Rosenbrock -->
        <problem id="f20" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^1000">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rosenbrock" />
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.0" />
                            <upperBound class="controlparameter.DomainProportionalControlParameter" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
            </function>
        </problem>
    </problems>

    <measurements id="measurements" class="simulator.MeasurementSuite" resolution="100">
        <addMeasurement class="measurement.single.Fitness"/>
    </measurements>

    <simulations>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f1"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f1.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f2"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f2.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f3"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f3.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f4"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f4.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f5"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f5.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f6"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f6.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f7"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f7.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f8"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f8.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f9"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f9.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f10"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f10.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f11"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f11.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f12"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f12.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f13"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f13.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f14"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f14.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f15"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f15.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f16"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f16.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f17"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f17.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f18"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f18.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f19"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f19.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm idref="pso"/>
            <problem idref="f20"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/cec2010-pso-f20.txt"/>
        </simulation>
    </simulations>
</simulator>