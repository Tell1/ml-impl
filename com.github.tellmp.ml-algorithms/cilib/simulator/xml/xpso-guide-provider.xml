<?xml version="1.0"?>
<!DOCTYPE simulator
[
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <!--Crossover gBest guide provider UNDX-->
        <algorithm id="xpso-undx-guide-repeating" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <component value="pbest"/>
                            <crossoverSelection class="pso.crossover.operations.RepeatingCrossoverSelection">
                                <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                                    <crossoverStrategy class="entity.operators.crossover.real.UnimodalNormalDistributionCrossoverStrategy" />
                                    <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                                    <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                                </crossoverStrategy>
                                <particleProvider class="pso.crossover.particleprovider.GBestParticleProvider"/>
                                <retries class="controlparameter.ConstantControlParameter" parameter="10" />
                            </crossoverSelection>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <algorithm id="xpso-undx-guide-boltzmann" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <component value="pbest"/>
                            <crossoverSelection class="pso.crossover.operations.BoltzmannCrossoverSelection">
                                <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                                    <crossoverStrategy class="entity.operators.crossover.real.UnimodalNormalDistributionCrossoverStrategy">
                                        <numberOfParents value="10" />
                                    </crossoverStrategy>
                                    <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                                    <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                                </crossoverStrategy>
                                <particleProvider class="pso.crossover.particleprovider.GBestParticleProvider"/>
                                <comparator class="entity.comparator.BoltzmannComparator">
                                    <tempSchedule class="controlparameter.LinearlyVaryingControlParameter" initialValue="100" finalValue="1" />
                                    <distribution class="math.random.UniformDistribution" />
                                </comparator>
                            </crossoverSelection>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <!--Crossover gBest guide provider PCX-->
        <algorithm id="xpso-pcx-guide-repeating" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <component value="pbest"/>
                            <crossoverSelection class="pso.crossover.operations.RepeatingCrossoverSelection">
                                <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                                    <crossoverStrategy class="entity.operators.crossover.real.ParentCentricCrossoverStrategy" />
                                    <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                                    <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                                </crossoverStrategy>
                                <particleProvider class="pso.crossover.particleprovider.GBestParticleProvider"/>
                                <retries class="controlparameter.ConstantControlParameter" parameter="10" />
                            </crossoverSelection>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <algorithm id="xpso-pcx-guide-boltzmann" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <component value="pbest"/>
                            <crossoverSelection class="pso.crossover.operations.BoltzmannCrossoverSelection">
                                <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                                    <crossoverStrategy class="entity.operators.crossover.real.ParentCentricCrossoverStrategy">
                                        <numberOfParents value="10" />
                                    </crossoverStrategy>
                                    <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                                    <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                                </crossoverStrategy>
                                <particleProvider class="pso.crossover.particleprovider.GBestParticleProvider"/>
                                <comparator class="entity.comparator.BoltzmannComparator">
                                    <tempSchedule class="controlparameter.LinearlyVaryingControlParameter" initialValue="100" finalValue="1" />
                                    <distribution class="math.random.UniformDistribution" />
                                </comparator>
                            </crossoverSelection>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <!--Crossover gBest guide provider SPX-->
        <algorithm id="xpso-spx-guide-repeating" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <component value="pbest"/>
                            <crossoverSelection class="pso.crossover.operations.RepeatingCrossoverSelection">
                                <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                                    <crossoverStrategy class="entity.operators.crossover.real.SimplexCrossoverStrategy" />
                                    <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                                    <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                                </crossoverStrategy>
                                <particleProvider class="pso.crossover.particleprovider.GBestParticleProvider"/>
                                <retries class="controlparameter.ConstantControlParameter" parameter="10" />
                            </crossoverSelection>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <algorithm id="xpso-spx-guide-boltzmann" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <component value="pbest"/>
                            <crossoverSelection class="pso.crossover.operations.BoltzmannCrossoverSelection">
                                <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                                    <crossoverStrategy class="entity.operators.crossover.real.SimplexCrossoverStrategy">
                                        <numberOfParents value="10" />
                                    </crossoverStrategy>
                                    <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                                    <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                                </crossoverStrategy>
                                <particleProvider class="pso.crossover.particleprovider.GBestParticleProvider"/>
                                <comparator class="entity.comparator.BoltzmannComparator">
                                    <tempSchedule class="controlparameter.LinearlyVaryingControlParameter" initialValue="100" finalValue="1" />
                                    <distribution class="math.random.UniformDistribution" />
                                </comparator>
                            </crossoverSelection>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <!--Crossover gBest guide provider using particle positions instead of pbests PCX-->
        <algorithm id="xpso-pcx-guide-repeating-particle-positions" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <component value="position"/>
                            <crossoverSelection class="pso.crossover.operations.RepeatingCrossoverSelection">
                                <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                                    <crossoverStrategy class="entity.operators.crossover.real.ParentCentricCrossoverStrategy" />
                                    <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                                    <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                                </crossoverStrategy>
                                <particleProvider class="pso.crossover.particleprovider.GBestParticleProvider"/>
                                <retries class="controlparameter.ConstantControlParameter" parameter="10" />
                            </crossoverSelection>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <algorithm id="xpso-pcx-guide-boltzmann-particle-positions" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <component value="position"/>
                            <crossoverSelection class="pso.crossover.operations.BoltzmannCrossoverSelection">
                                <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                                    <crossoverStrategy class="entity.operators.crossover.real.ParentCentricCrossoverStrategy">
                                        <numberOfParents value="10" />
                                    </crossoverStrategy>
                                    <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                                    <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                                </crossoverStrategy>
                                <particleProvider class="pso.crossover.particleprovider.GBestParticleProvider"/>
                                <comparator class="entity.comparator.BoltzmannComparator">
                                    <tempSchedule class="controlparameter.LinearlyVaryingControlParameter" initialValue="100" finalValue="1" />
                                    <distribution class="math.random.UniformDistribution" />
                                </comparator>
                            </crossoverSelection>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>
    </algorithms>

    <problems>
        <problem id="griewank" class="problem.FunctionOptimisationProblem" domain="R(300:600)^30">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Griewank" />
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="500" />
            </function>
        </problem>
    </problems>

    <measurements id="fitness" class="simulator.MeasurementSuite" resolution="100">
        <addMeasurement class="measurement.single.Fitness" />
    </measurements>

    <simulations>
        <simulation samples="5">
            <algorithm idref="xpso-undx-guide-repeating" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-undx-guide-repeating-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-undx-guide-boltzmann" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-undx-guide-boltzmann-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-guide-repeating" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-pcx-guide-repeating-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-guide-boltzmann" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-pcx-guide-boltzmann-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-spx-guide-repeating" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-spx-guide-repeating-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-spx-guide-boltzmann" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-spx-guide-boltzmann-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-guide-repeating-particle-positions" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-pcx-guide-repeating-particle-positions-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-guide-boltzmann-particle-positions" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-pcx-guide-boltzmann-particle-positions-griewank.txt" />
        </simulation>
    </simulations>
</simulator>

