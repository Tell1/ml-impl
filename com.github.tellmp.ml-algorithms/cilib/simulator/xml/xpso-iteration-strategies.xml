<?xml version="1.0"?>
<!DOCTYPE simulator
[
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <!--Crossover iteration strategy UNDX-->
        <algorithm id="xpso-undx-iteration-repeating" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverOperation class="pso.crossover.operations.RepeatingCrossoverSelection">
                    <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                        <crossoverStrategy class="entity.operators.crossover.real.UnimodalNormalDistributionCrossoverStrategy">
                            <numberOfParents value="10" />
                        </crossoverStrategy>
                        <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                        <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                    </crossoverStrategy>
                    <retries class="controlparameter.ConstantControlParameter" parameter="10" />
                </crossoverOperation>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <algorithm id="xpso-undx-iteration-boltzmann" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverOperation class="pso.crossover.operations.BoltzmannCrossoverSelection">
                    <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                        <crossoverStrategy class="entity.operators.crossover.real.UnimodalNormalDistributionCrossoverStrategy">
                            <numberOfParents value="10" />
                        </crossoverStrategy>
                        <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                        <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                    </crossoverStrategy>
                    <!--This is problem dependent I think-->
                    <comparator class="entity.comparator.BoltzmannComparator">
                        <tempSchedule class="controlparameter.LinearlyVaryingControlParameter" initialValue="100" finalValue="1" />
                        <distribution class="math.random.UniformDistribution" />
                    </comparator>
                </crossoverOperation>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <!--Crossover iteration strategy PCX-->
        <algorithm id="xpso-pcx-iteration-repeating" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverOperation class="pso.crossover.operations.RepeatingCrossoverSelection">
                    <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                        <crossoverStrategy class="entity.operators.crossover.real.ParentCentricCrossoverStrategy">
                            <numberOfParents value="10" />
                        </crossoverStrategy>
                        <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                        <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                    </crossoverStrategy>
                    <retries class="controlparameter.ConstantControlParameter" parameter="10" />
                </crossoverOperation>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <algorithm id="xpso-pcx-iteration-boltzmann" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverOperation class="pso.crossover.operations.BoltzmannCrossoverSelection">
                    <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                        <crossoverStrategy class="entity.operators.crossover.real.ParentCentricCrossoverStrategy">
                            <numberOfParents value="10" />
                        </crossoverStrategy>
                        <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                        <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                    </crossoverStrategy>
                    <!--This is problem dependent I think-->
                    <comparator class="entity.comparator.BoltzmannComparator">
                        <tempSchedule class="controlparameter.LinearlyVaryingControlParameter" initialValue="100" finalValue="1" />
                        <distribution class="math.random.UniformDistribution" />
                    </comparator>
                </crossoverOperation>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <!--Crossover iteration strategy SPX-->
        <algorithm id="xpso-spx-iteration-repeating" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverOperation class="pso.crossover.operations.RepeatingCrossoverSelection">
                    <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                        <crossoverStrategy class="entity.operators.crossover.real.SimplexCrossoverStrategy">
                            <numberOfParents value="10" />
                        </crossoverStrategy>
                        <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                        <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                    </crossoverStrategy>
                    <retries class="controlparameter.ConstantControlParameter" parameter="10" />
                </crossoverOperation>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>

        <algorithm id="xpso-spx-iteration-boltzmann" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverOperation class="pso.crossover.operations.BoltzmannCrossoverSelection">
                    <crossoverStrategy class="pso.crossover.ParticleCrossoverStrategy">
                        <crossoverStrategy class="entity.operators.crossover.real.SimplexCrossoverStrategy">
                            <numberOfParents value="10" />
                        </crossoverStrategy>
                        <pbestProvider class="pso.crossover.pbestupdate.IdentityOffspringPBestProvider" />
                        <velocityProvider class="pso.crossover.velocityprovider.IdentityOffspringVelocityProvider" />
                    </crossoverStrategy>
                    <!--This is problem dependent I think-->
                    <comparator class="entity.comparator.BoltzmannComparator">
                        <tempSchedule class="controlparameter.LinearlyVaryingControlParameter" initialValue="100" finalValue="1" />
                        <distribution class="math.random.UniformDistribution" />
                    </comparator>
                </crossoverOperation>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
        </algorithm>
    </algorithms>

    <problems>
        <problem id="griewank" class="problem.FunctionOptimisationProblem" domain="R(300:600)^30">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Griewank" />
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="500" />
            </function>
        </problem>
    </problems>

    <measurements id="fitness" class="simulator.MeasurementSuite" resolution="100">
        <addMeasurement class="measurement.single.Fitness" />
    </measurements>

    <simulations>
        <simulation samples="5">
            <algorithm idref="xpso-undx-iteration-repeating" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-undx-iteration-repeating-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-undx-iteration-boltzmann" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-undx-iteration-boltzmann-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-iteration-repeating" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-pcx-iteration-repeating-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-iteration-boltzmann" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-pcx-iteration-boltzmann-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-spx-iteration-repeating" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-spx-iteration-repeating-griewank.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-spx-iteration-boltzmann" />
            <problem idref="griewank" />
            <measurements idref="fitness" />
            <output format="TXT" file="data/xpso-spx-iteration-boltzmann-griewank.txt" />
        </simulation>
    </simulations>
</simulator>

