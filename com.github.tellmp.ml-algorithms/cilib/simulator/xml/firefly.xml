<?xml version="1.0"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <algorithm id="firefly" class="ff.FFA">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" />
            <iterationStrategy class="ff.iterationstrategies.StandardFireflyIterationStrategy" />
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="ff.firefly.StandardFirefly">
                    <positionUpdateStrategy class="ff.positionupdatestrategies.StandardFireflyPositionUpdateStrategy">
                        <!-- alpha determines the randomness of the fireflies -->
                        <alpha class="controlparameter.LinearlyVaryingControlParameter" initialValue="0.2" finalValue="0.0" />
                        <!-- betaMin controls the minimum attraction of neighbouring fireflies -->
                        <betaMin class="controlparameter.ConstantControlParameter" parameter="0.2"/>
                        <!-- gamma determines the light absorbtion: as gamma -> 0, the algorithm
                        behaves more like the standard PSO, as gamma -> infinity it behaves
                        like a random search algorithm -->
                        <gamma class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                    </positionUpdateStrategy>
                </entityType>
            </initialisationStrategy>
        </algorithm>
    </algorithms>
    <problems>
        <problem id="spherical" class="problem.FunctionOptimisationProblem" domain="R(-5.12:5.12)^30">
            <function class="functions.continuous.unconstrained.Spherical"/>
        </problem>
        <problem id="rosenbrock" class="problem.FunctionOptimisationProblem" domain="R(-2.048:2.048)^30">
            <function class="functions.continuous.unconstrained.Rosenbrock"/>
        </problem>
        <problem id="rastrigin" class="problem.FunctionOptimisationProblem" domain="R(-5.12:5.12)^30">
            <function class="functions.continuous.unconstrained.Rastrigin"/>
        </problem>
        <problem id="griewank" class="problem.FunctionOptimisationProblem" domain="R(-600:600)^30">
            <function class="functions.continuous.unconstrained.Griewank"/>
        </problem>
        <problem id="quadric" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^30">
            <function class="functions.continuous.unconstrained.Quadric"/>
        </problem>
        <problem id="michalewicz" class="problem.FunctionOptimisationProblem" domain="R(0:3.141592653589793)^10">
            <function class="functions.continuous.unconstrained.Michalewicz"/>
        </problem>
        <problem id="hyperellipsoid" class="problem.FunctionOptimisationProblem" domain="R(-5.12:5.12)^30">
            <function class="functions.continuous.unconstrained.HyperEllipsoid"/>
        </problem>
        <problem id="easom" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^2">
            <function class="functions.continuous.unconstrained.Easom"/>
        </problem>
        <problem id="colville" class="problem.FunctionOptimisationProblem" domain="R(-10:10)^4">
            <function class="functions.continuous.unconstrained.Colville"/>
        </problem>
        <problem id="bohachevsky1" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^2">
            <function class="functions.continuous.unconstrained.Bohachevsky1"/>
        </problem>
        <problem id="ackley" class="problem.FunctionOptimisationProblem" domain="R(-32.768:32.768)^30">
            <function class="functions.continuous.unconstrained.Ackley"/>
        </problem>
        <problem id="schwefel" class="problem.FunctionOptimisationProblem" domain="R(-512.03:511.97)^30">
            <function class="functions.continuous.unconstrained.Schwefel"/>
        </problem>
    </problems>
    <measurements id="fitness" class="simulator.MeasurementSuite" resolution="10">
        <addMeasurement class="measurement.single.Fitness"/>
    </measurements>
    <simulations>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-spherical.txt" />
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="rosenbrock"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-rosenbrock.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="rastrigin"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-rastrigin.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="griewank"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-griewank.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="quadric"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-quadric.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="michalewicz"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-michalewicz.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="hyperellipsoid"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-hyperellipsoid.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="easom"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-easom.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="colville"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-colville.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="bohachevsky1"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-bohachevksy1.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="ackley"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-ackley.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="firefly"/>
            <problem idref="schwefel"/>
            <measurements idref="fitness" />
        <output format="TXT" file="data/firefly-schwefel.txt"/>
        </simulation>
    </simulations>
</simulator>
