<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <algorithm id="pso" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <inertiaWeight class="tuning.TuningControlParameter" index="0"/>
                        <cognitiveAcceleration class="tuning.TuningControlParameter" index="1"/>
                        <socialAcceleration class="tuning.TuningControlParameter" index="2"/>
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="100"/>
        </algorithm>

        <algorithm id="frace" class="tuning.TuningAlgorithm">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="100"/>

            <iterationStrategy class="tuning.IFRaceIterationStrategy">
                <iterationStrategy class="tuning.FRaceIterationStrategy">
                    <minProblems class="controlparameter.ConstantControlParameter" parameter="1"/>
                    <minSolutions class="controlparameter.ConstantControlParameter" parameter="2"/>
                </iterationStrategy>

                <parameterChangeTrigger class="tuning.parameterchange.triggers.PeriodicParameterChangeTrigger">
                    <period class="controlparameter.ConstantControlParameter" parameter="10"/>
                </parameterChangeTrigger>

                <parameterChangeReaction class="tuning.parameterchange.reactions.MinMaxParameterChangeReaction">
                    <count class="controlparameter.ConstantControlParameter" parameter="100"/>
                </parameterChangeReaction>
            </iterationStrategy>

            <parameterProvider class="tuning.parameterlist.SobolParameterListProvider">
                <addParameterBounds class="tuning.parameters.TuningBounds" lowerBound="0.0" upperBound="2.0"/>
                <addParameterBounds class="tuning.parameters.TuningBounds" lowerBound="0.0" upperBound="4.0"/>
                <addParameterBounds class="tuning.parameters.TuningBounds" lowerBound="0.0" upperBound="4.0"/>
                <count value="100"/>
            </parameterProvider>
        </algorithm>
    </algorithms>

    <problems>
        <problem id="tuning" class="tuning.TuningProblem" domain="R(-5:5)^10">

            <samples value="1"/>
            <targetAlgorithm idref="pso"/>
            <measurement class="measurement.single.Fitness"/>

            <problemsProvider class="tuning.problem.MultiDimensionProblemGenerator">

                <dimensionBounds class="tuning.parameters.TuningBounds" lowerBound="10" upperBound="100"/>

                <problemsProvider class="tuning.problem.StandardProblemGenerator">

                    <addProblem id="f1" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
                        <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                            <function class="functions.continuous.decorators.ScaledFunctionDecorator">
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Spherical"/>
                                    <matrixType value="linear_transformation"/>
                                    <condition value="3"/>
                                </function>
                                <horizontalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </horizontalScale>
                                <verticalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </verticalScale>
                            </function>
                            <horizontalShift class="controlparameter.FixedControlParameter">
                                <controlParameter class="controlparameter.RandomControlParameter">
                                    <distribution class="math.random.UniformDistribution">
                                        <lowerBound class="controlparameter.ConstantControlParameter" parameter="-50"/>
                                        <upperBound class="controlparameter.ConstantControlParameter" parameter="50"/>
                                    </distribution>
                                </controlParameter>
                            </horizontalShift>
                        </function>
                    </addProblem>

                    <addProblem id="f2" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
                        <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                            <function class="functions.continuous.decorators.ScaledFunctionDecorator">
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Rosenbrock"/>
                                    <matrixType value="linear_transformation"/>
                                    <condition value="3"/>
                                </function>
                                <horizontalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </horizontalScale>
                                <verticalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </verticalScale>
                            </function>
                            <horizontalShift class="controlparameter.FixedControlParameter">
                                <controlParameter class="controlparameter.RandomControlParameter">
                                    <distribution class="math.random.UniformDistribution">
                                        <lowerBound class="controlparameter.ConstantControlParameter" parameter="-50"/>
                                        <upperBound class="controlparameter.ConstantControlParameter" parameter="50"/>
                                    </distribution>
                                </controlParameter>
                            </horizontalShift>
                        </function>
                    </addProblem>

                    <addProblem id="f3" class="problem.FunctionOptimisationProblem" domain="R(0:600)^10">
                        <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                            <function class="functions.continuous.decorators.ScaledFunctionDecorator">
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Griewank"/>
                                    <matrixType value="linear_transformation"/>
                                    <condition value="3"/>
                                </function>
                                <horizontalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </horizontalScale>
                                <verticalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </verticalScale>
                            </function>
                            <horizontalShift class="controlparameter.FixedControlParameter">
                                <controlParameter class="controlparameter.RandomControlParameter">
                                    <distribution class="math.random.UniformDistribution">
                                        <lowerBound class="controlparameter.ConstantControlParameter" parameter="150"/>
                                        <upperBound class="controlparameter.ConstantControlParameter" parameter="300"/>
                                    </distribution>
                                </controlParameter>
                            </horizontalShift>
                        </function>
                    </addProblem>

                    <addProblem id="f4" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^10">
                        <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                            <function class="functions.continuous.decorators.ScaledFunctionDecorator">
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Ackley"/>
                                    <matrixType value="linear_transformation"/>
                                    <condition value="3"/>
                                </function>
                                <horizontalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </horizontalScale>
                                <verticalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </verticalScale>
                            </function>
                            <horizontalShift class="controlparameter.FixedControlParameter">
                                <controlParameter class="controlparameter.RandomControlParameter">
                                    <distribution class="math.random.UniformDistribution">
                                        <lowerBound class="controlparameter.ConstantControlParameter" parameter="-16"/>
                                        <upperBound class="controlparameter.ConstantControlParameter" parameter="16"/>
                                    </distribution>
                                </controlParameter>
                            </horizontalShift>
                        </function>
                    </addProblem>

                    <addProblem id="f5" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^10">
                        <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                            <function class="functions.continuous.decorators.ScaledFunctionDecorator">
                                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                                    <function class="functions.continuous.unconstrained.Rastrigin"/>
                                    <matrixType value="linear_transformation"/>
                                    <condition value="3"/>
                                </function>
                                <horizontalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </horizontalScale>
                                <verticalScale class="controlparameter.FixedControlParameter">
                                    <controlParameter class="controlparameter.RandomControlParameter">
                                        <distribution class="math.random.UniformDistribution">
                                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                                            <upperBound class="controlparameter.ConstantControlParameter" parameter="1.5"/>
                                        </distribution>
                                    </controlParameter>
                                </verticalScale>
                            </function>
                            <horizontalShift class="controlparameter.FixedControlParameter">
                                <controlParameter class="controlparameter.RandomControlParameter">
                                    <distribution class="math.random.UniformDistribution">
                                        <lowerBound class="controlparameter.ConstantControlParameter" parameter="-2.5"/>
                                        <upperBound class="controlparameter.ConstantControlParameter" parameter="2.5"/>
                                    </distribution>
                                </controlParameter>
                            </horizontalShift>
                        </function>
                    </addProblem>
                </problemsProvider>
            </problemsProvider>
        </problem>
    </problems>

    <measurements id="measurements" class="simulator.MeasurementSuite" resolution="1">
        <addMeasurement class="measurement.multiple.MultipleSolutions"/>
    </measurements>

    <simulations>
        <simulation samples="1">
            <algorithm idref="frace"/>
            <problem idref="tuning"/>
            <measurements idref="measurements" />
            <output format="TXT" file="data/i_f-race.txt"/>
        </simulation>
    </simulations>
</simulator>
